{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nemiz\\\\Desktop\\\\English-words-card-redux\\\\englishapp\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const [pressed, setPressed] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [counter, setCounter] = useState(1);\n  const [viewCard, setViewCard] = useState(false);\n  const posts = useSelector(state => state);\n  const onecard = posts[index];\n  const handleChange = () => {\n    setPressed(!pressed);\n  };\n  const handleViewCard = () => {\n    if (!viewCard) {\n      setViewCard(true);\n      props.onLearned();\n    }\n  };\n  const nextClick = () => {\n    if (index + 1 >= posts.length) {\n      setIndex(0);\n    } else setIndex(index + 1);\n    setViewCard(false);\n    setPressed(false);\n    handleCount();\n  };\n  const prevClick = () => {\n    if (index - 1 < 0) {\n      setIndex(posts.length - 1);\n    } else setIndex(index - 1);\n    setViewCard(false);\n    setPressed(false);\n    handleCountMin();\n  };\n  const handleCount = () => {\n    setCounter(counter + 1);\n  };\n  const handleCountMin = () => {\n    setCounter(counter - 1);\n  };\n  const ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-learned\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-learned-btn\",\n          onClick: handleViewCard,\n          ref: ref,\n          children: \"I know this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container__onecard\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-answer\",\n          onClick: prevClick,\n          children: \"Prev word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"card\",\n          ...index,\n          initial: {\n            opacity: 0,\n            scale: 2\n          },\n          animate: {\n            opacity: 1,\n            scale: 1,\n            rotate: 360\n          },\n          transition: {\n            duration: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: [\" \", onecard.english]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-transcription\",\n            children: [\"Transcription: \", onecard.transcription]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleChange,\n            children: pressed ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table_translate\",\n              children: onecard.russian\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"card-answer\",\n              children: \"Translate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"card-answer\",\n          onClick: nextClick,\n          children: \"Next word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-counter\",\n        children: counter + \"/\" + posts.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Card, \"KUzlBH9Eizt85VmE8q9gjgAi7iE=\", false, function () {\n  return [useSelector];\n});\n_c = Card;\nexport default Card;\n\n///////////////// Math random ///////////////\n//const [word, setWord] = useState(cards[0]);\n\n// useEffect(() => {\n//   wordGenerate();\n// }, []);\n\n// const wordGenerate = () => {\n//   let randomNumber = Math.floor(Math.random() * cards.length);\n//   setWord(cards[randomNumber]);\n// };\n\n// const nextWord = () => {\n//   wordGenerate();\n// };\n\n//onClick={handleLearn}\n\n//onClick={() => childToParent()}\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Card","props","_s","pressed","setPressed","index","setIndex","counter","setCounter","viewCard","setViewCard","posts","state","onecard","handleChange","handleViewCard","onLearned","nextClick","length","handleCount","prevClick","handleCountMin","ref","current","focus","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","scale","animate","rotate","transition","duration","english","transcription","russian","_c","$RefreshReg$"],"sources":["C:/Users/nemiz/Desktop/English-words-card-redux/englishapp/src/components/Card/Card.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useSelector } from \"react-redux\";\n\nfunction Card(props) {\n  const [pressed, setPressed] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [counter, setCounter] = useState(1);\n  const [viewCard, setViewCard] = useState(false);\n  const posts = useSelector((state) => state);\n\n  const onecard = posts[index];\n\n  const handleChange = () => {\n    setPressed(!pressed);\n  };\n\n  const handleViewCard = () => {\n    if (!viewCard) {\n      setViewCard(true);\n      props.onLearned();\n    }\n  };\n\n  const nextClick = () => {\n    if (index + 1 >= posts.length) {\n      setIndex(0);\n    } else setIndex(index + 1);\n    setViewCard(false);\n    setPressed(false);\n    handleCount();\n  };\n\n  const prevClick = () => {\n    if (index - 1 < 0) {\n      setIndex(posts.length - 1);\n    } else setIndex(index - 1);\n    setViewCard(false);\n    setPressed(false);\n    handleCountMin();\n  };\n\n  const handleCount = () => {\n    setCounter(counter + 1);\n  };\n\n  const handleCountMin = () => {\n    setCounter(counter - 1);\n  };\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current.focus();\n  }, []);\n\n  return (\n    <>\n      <main>\n        <div className=\"card-learned\">\n          <button\n            className=\"card-learned-btn\"\n            onClick={handleViewCard}\n            ref={ref}\n          >\n            I know this word\n          </button>\n        </div>\n        <div className=\"container__onecard\">\n          <button className=\"card-answer\" onClick={prevClick}>\n            Prev word\n          </button>\n          <motion.div\n            className=\"card\"\n            {...index}\n            initial={{ opacity: 0, scale: 2 }}\n            animate={{ opacity: 1, scale: 1, rotate: 360 }}\n            transition={{ duration: 1 }}\n          >\n            <h2 className=\"card-title\"> {onecard.english}</h2>\n\n            <div className=\"card-transcription\">\n              Transcription: {onecard.transcription}\n            </div>\n\n            {/* <div className=\"card-hint\"> Hint: {onecard.hint}</div> */}\n\n            <div onClick={handleChange}>\n              {pressed ? (\n                <div className=\"table_translate\">{onecard.russian}</div>\n              ) : (\n                <button className=\"card-answer\">Translate</button>\n              )}\n            </div>\n          </motion.div>\n          <button className=\"card-answer\" onClick={nextClick}>\n            Next word\n          </button>\n        </div>\n        <div className=\"card-counter\">{counter + \"/\" + posts.length}</div>\n      </main>\n    </>\n  );\n}\n\nexport default Card;\n\n///////////////// Math random ///////////////\n//const [word, setWord] = useState(cards[0]);\n\n// useEffect(() => {\n//   wordGenerate();\n// }, []);\n\n// const wordGenerate = () => {\n//   let randomNumber = Math.floor(Math.random() * cards.length);\n//   setWord(cards[randomNumber]);\n// };\n\n// const nextWord = () => {\n//   wordGenerate();\n// };\n\n//onClick={handleLearn}\n\n//onClick={() => childToParent()}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}