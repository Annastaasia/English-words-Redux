{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/nemiz/Desktop/English-words-card-redux/englishapp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/nemiz/Desktop/English-words-card-redux/englishapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/nemiz/Desktop/English-words-card-redux/englishapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{motion}from\"framer-motion\";import{useDispatch}from\"react-redux\";import POST from\"../../redux/POST.js\";import{POST_ACTION}from\"../../redux/action.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function AddWords(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),userEnglish=_useState2[0],SetuserEnglish=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),userTranscription=_useState4[0],SetuserTranscription=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),userRussian=_useState6[0],SetuserRussian=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),userTags=_useState8[0],SetuserTags=_useState8[1];// const loading = useSelector((state) => state.loading);\n// const error = useSelector((state) => state.error);\nvar dispatch=useDispatch();var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){var newWord,response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(!userEnglish.trim()||!userTranscription.trim()||!userRussian.trim()||!userTags.trim())){_context.next=4;break;}alert(\"Please fill in all fields\");return _context.abrupt(\"return\");case 4:newWord={english:userEnglish,transcription:userTranscription,russian:userRussian,tags:userTags};_context.next=7;return POST(newWord);case 7:response=_context.sent;if(response){dispatch(POST_ACTION(response));}clearForm();case 10:case\"end\":return _context.stop();}},_callee);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();var clearForm=function clearForm(){SetuserEnglish(\"\");SetuserTranscription(\"\");SetuserRussian(\"\");SetuserTags(\"\");};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"main\",{className:\"container\",children:/*#__PURE__*/_jsxs(motion.form,{className:\"table\",initial:{opacity:0,scale:3},animate:{opacity:1,scale:1},transition:{duration:1},children:[/*#__PURE__*/_jsx(\"div\",{className:\"table_number\",children:\"Add new word:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",placeholder:\"English word\",name:\"english\",value:userEnglish,onChange:function onChange(e){return SetuserEnglish(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",placeholder:\"Transcription word\",name:\"transcription\",value:userTranscription,onChange:function onChange(e){return SetuserTranscription(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",placeholder:\"Russian word\",name:\"russian\",value:userRussian,onChange:function onChange(e){return SetuserRussian(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",placeholder:\"Tags\",name:\"tags\",value:userTags,onChange:function onChange(e){return SetuserTags(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"table_buttons\",children:[/*#__PURE__*/_jsx(motion.button,{type:\"button\",onClick:handleSubmit,className:\" table_save \",whileHover:{scale:1.2}}),/*#__PURE__*/_jsx(motion.button,{className:\"table_close\"// disabled={loading}\n,onClick:clearForm,whileHover:{scale:1.2}})]})]})})});}","map":{"version":3,"names":["React","useState","motion","useDispatch","POST","POST_ACTION","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AddWords","_useState","_useState2","_slicedToArray","userEnglish","SetuserEnglish","_useState3","_useState4","userTranscription","SetuserTranscription","_useState5","_useState6","userRussian","SetuserRussian","_useState7","_useState8","userTags","SetuserTags","dispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","newWord","response","wrap","_callee$","_context","prev","next","preventDefault","trim","alert","abrupt","english","transcription","russian","tags","sent","clearForm","stop","_x","apply","arguments","children","className","form","initial","opacity","scale","animate","transition","duration","type","placeholder","name","value","onChange","target","button","onClick","whileHover"],"sources":["C:/Users/nemiz/Desktop/English-words-card-redux/englishapp/src/components/AddWords/AddWords.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useDispatch } from \"react-redux\";\nimport POST from \"../../redux/POST.js\";\nimport { POST_ACTION } from \"../../redux/action.js\";\n\nexport default function AddWords() {\n  const [userEnglish, SetuserEnglish] = useState(\"\");\n  const [userTranscription, SetuserTranscription] = useState(\"\");\n  const [userRussian, SetuserRussian] = useState(\"\");\n  const [userTags, SetuserTags] = useState(\"\");\n  // const loading = useSelector((state) => state.loading);\n  // const error = useSelector((state) => state.error);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (\n      !userEnglish.trim() ||\n      !userTranscription.trim() ||\n      !userRussian.trim() ||\n      !userTags.trim()\n    ) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n    const newWord = {\n      english: userEnglish,\n      transcription: userTranscription,\n      russian: userRussian,\n      tags: userTags,\n    };\n\n    const response = await POST(newWord);\n\n    if (response) {\n      dispatch(POST_ACTION(response));\n    }\n\n    clearForm();\n  };\n\n  const clearForm = () => {\n    SetuserEnglish(\"\");\n    SetuserTranscription(\"\");\n    SetuserRussian(\"\");\n    SetuserTags(\"\");\n  };\n\n  return (\n    <>\n      <main className=\"container\">\n        <motion.form\n          className=\"table\"\n          initial={{ opacity: 0, scale: 3 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 1 }}\n        >\n          <div className=\"table_number\">Add new word:</div>\n\n          <input\n            type=\"text\"\n            className={\"form-input\"}\n            placeholder=\"English word\"\n            name=\"english\"\n            value={userEnglish}\n            onChange={(e) => SetuserEnglish(e.target.value)}\n          />\n\n          <input\n            type=\"text\"\n            className={\"form-input\"}\n            placeholder=\"Transcription word\"\n            name=\"transcription\"\n            value={userTranscription}\n            onChange={(e) => SetuserTranscription(e.target.value)}\n          />\n\n          <input\n            type=\"text\"\n            className={\"form-input\"}\n            placeholder=\"Russian word\"\n            name=\"russian\"\n            value={userRussian}\n            onChange={(e) => SetuserRussian(e.target.value)}\n          />\n\n          <input\n            type=\"text\"\n            className={\"form-input\"}\n            placeholder=\"Tags\"\n            name=\"tags\"\n            value={userTags}\n            onChange={(e) => SetuserTags(e.target.value)}\n          />\n\n          <div className=\"table_buttons\">\n            <motion.button\n              type=\"button\"\n              onClick={handleSubmit}\n              className={\" table_save \"}\n              whileHover={{ scale: 1.2 }}\n            ></motion.button>\n            <motion.button\n              className=\"table_close\"\n              // disabled={loading}\n              onClick={clearForm}\n              whileHover={{ scale: 1.2 }}\n            ></motion.button>\n            {/* {error && <p>{error.message}</p>} */}\n          </div>\n        </motion.form>\n      </main>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}